// AUTO-GENERATED by mkduff.go
// Run go generate from src/runtime to update.
// See mkduff.go for comments.

#include "textflag.h"

TEXT runtime·duffzero(SB), NOSPLIT|NOFRAME, $0-0
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	MOVD	ZR, 8(RT1)
	ADD	$8, RT1
	RET

// TODO: Implement runtime·duffcopy.
