// Copyright 2014 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// +build sparc64

#include "textflag.h"
#include "asm_sparc64.h"

// Called by C code generated by cmd/cgo.
// func crosscall2(fn func(a unsafe.Pointer, n int32, ctxt uintptr), a unsafe.Pointer, n int32, ctxt uintptr)
// Saves C callee-saved registers and calls fn with three arguments.

#define CROSS_FRAME 48

// TODO(shawn): this probably has to be NOFRAME so it won't appear in
// stack? Ideally, should really use register windows if possible.
TEXT crosscall2(SB),NOSPLIT|REGWIN,$CROSS_FRAME
	// Start with standard C stack frame layout and linkage

	// Save %G2-%G3; the register window saved the rest.
	MOVD	CTXT, (-8-0*8+CROSS_FRAME+FIXED_FRAME)(BSP)
	MOVD	g, (-8-1*8+CROSS_FRAME+FIXED_FRAME)(BSP)

	// Initialize Go ABI environment
	CALL	runtime·reginit(SB)
	CALL	runtime·load_g(SB)

	MOVD	I1, FIXED_FRAME+0(BSP)	/* arg */
	MOVD	I2, FIXED_FRAME+8(BSP)	/* argsize (includes padding) */
	MOVD	I3, FIXED_FRAME+16(BSP)	/* ctxt */
	CALL	(I0)

	// Restore %G2-%G3; the rest will be restored at return.
	MOVD	(-8-1*8+CROSS_FRAME+FIXED_FRAME)(BSP), g
	MOVD	(-8-0*8+CROSS_FRAME+FIXED_FRAME)(BSP), CTXT

	RET
