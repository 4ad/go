RTOBJS=runtime.o data.o
RT=pkg/solaris_sparc64/runtime.a
LD=`go env GOTOOLDIR`/link
ALTROOT=`go env GOROOT`/alt

EXES=empty.out hello.out call.out virtreg.out
GOS=call0.go.s
GNUS=${EXES:%.out=%.gnu.S}
DATS=${EXES:%.out=%.dat}

all:V: $EXES $GNUS $GOS $DATS

tools:V:
	go install -v cmd/asm cmd/compile cmd/link cmd/pack

pkg/solaris_sparc64:
	rm -rf pkg
	mkdir -p pkg/solaris_sparc64

%.o: tools %.s
	GOOS=solaris GOARCH=sparc64 go tool asm $stem.s

$RT: pkg/solaris_sparc64 $RTOBJS
	go tool pack c $target $RTOBJS

%.go.s: tools %.go
	GOOS=linux GOARCH=arm64 go tool compile -S -o /dev/null $stem.go >$target

%.out: %.o $RT
	GOROOT=$ALTROOT GOOS=solaris GOARCH=sparc64 $LD -w -o $target $stem.o

%.gnu.S: %.out
	sparc64-none-elf-objdump -d $prereq >$target

%.dat: %.out
	sparc64-none-elf-readelf -x .data -x .rodata -x .noptrdata $prereq >$target

copy:V: $EXES
	rsync -i $EXES torside:~/x

clean:V:
	rm -rf pkg *.o *.gnu.S *.go.s *.out *.dat
