Edit ,d
git diff origin/master..HEAD |wc
git push -f 4ad sparc64
go install -v cmd/asm cmd/link
go install -v cmd/compile
go install -v debug... cmd/cgo
go install -v cmd/vet
GOOS=solaris GOARCH=sparc64 go install -a -gcflags="-e" -v runtime
CC=sparcv9-solaris2.12-gcc GO_EXTLINK_ENABLED=1 CGO_ENABLED=1 GOOS=solaris GOARCH=sparc64 go install -v runtime/cgo
GOOS=solaris GOARCH=sparc64 go build -a -gcflags="-S" -asmflags="-S" runtime 2>/tmp/runtime.s
cd cmd/link/internal/sparc64
cd cmd/link/internal/ld
cd cmd/compile/internal/sparc64
cd cmd/compile/internal/gc
cd runtime/cgo
cd /tmp && lsr /Users/aram/go/test | grep \.go$ | xargs egrep -L 'ERROR' | xargs egrep -L 'import' | GOOS=solaris GOARCH=sparc64 xargs -n1 go tool compile >/tmp/errors
cd /tmp/2 && CC=sparcv9-solaris2.12-gcc GOARCH=sparc64 GOOS=solaris go tool cgo -godefs defs_solaris.go defs_solaris_sparc64.go >/tmp/2/defs1_solaris_sparc64.go
GOARCH=sparc64 GOOS=solaris go vet runtime
cd alt && mk clean && mk bigmov.go.ext
GO_EXTLINK_ENABLED=1 GOOS=solaris GOARCH=sparc64 go build -o /tmp/hello.out -x -ldflags='-w -extld=sparcv9-solaris2.12-gcc -linkmode=external' /Users/aram/go/test/helloworld.go
cd alt && mk clean && mk tls.gnu.out.readelf tls.o.readelf
scp /tmp/hello.out torside:
cd new && mk clean && mk helloworld.out
mk helloworld.out.tmp/go.o.readelf helloworld.out.tmp/go.o.rel
scp helloworld.out torside:

reserve R6

!!!
NO DYNAMIC SIZED INSTRUCTIONS
!!!

Stack management
RET
Auto/param references.

Check resvd.
!ASMULL
!AUMULL
	-> AMULD
*ASMULH
*AUMULH

!AHINT -> ARNOP

!ASDIV ->? ASDIVD
!AUDIV ->? AUDIVD
!AMUL -> AMULD

!ALSL -> ASLL
!ALSR -> ASRL
!AASR -> ASRA

(Go) CMP operand order is like arm64, this translates to *reverse* order in native assembly.

!AFCVTZSD -> AFDTOX
!AFCVTZSS -> AFSTOX
!AFCVTZSDW -> AFDTOI
!AFCVTZSSW -> AFSTOI
	what about float -> unsigned?

!AFCVTSD -> AFSTOD
!AFCVTDS -> AFDTOS

!ASCVTFD -> AFXTOD
!ASCVTFS -> AFXTOS
!ASCVTFWD -> AFITOD
!ASCVTFWS -> AFITOS
	what about unsigned -> float?

===

0(FP), first argument
8(FP), 2nd argument

[-frame, 0)(SP), automatics

// automatic N at -(8+8N)(BFP)
// incoming argument N at (176+8N)(BFP)
// outgoing argument N at (176+8N)(BSP)

==
!sparc64.BIG
for small integer multiplication, maybe we need conversion to clear high bits

==

OLT for TFLOAT

==

Check Prog.Reg

==

Optimize duffcopy
